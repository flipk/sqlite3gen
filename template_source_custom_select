/* -*- Mode:c++; eval:(c-set-style "BSD"); c-basic-offset:4; indent-tabs-mode:nil; tab-width:8 -*- */

________ QUERY_CLASS_IMPL

SQL_SELECT_@@queryname@@ :: SQL_SELECT_@@queryname@@(sqlite3 *_pdb /*= NULL*/)
{
    pStmt_get_query = NULL;
    pdb = _pdb;
}

SQL_SELECT_@@queryname@@ :: ~SQL_SELECT_@@queryname@@(void)
{
    if (pStmt_get_query != NULL)
        sqlite3_finalize(pStmt_get_query);
}

void
SQL_SELECT_@@queryname@@ :: set_db(sqlite3 *_pdb)
{
    if (pStmt_get_query != NULL)
        sqlite3_finalize(pStmt_get_query);
    pStmt_get_query = NULL;
    pdb = _pdb;
}

bool
SQL_SELECT_@@queryname@@ :: get_columns(void)
{
    int got;
    sqlite3_stmt * pStmt = pStmt_get_query;
    if (log_row_func)
        log_row_msg.str("@@queryname@@: ");

@@get_columns@@

    if (log_row_func)
    {
        log_row_func(log_arg, log_row_msg.str());
        log_row_msg.str("");
    }

    return true;
}

bool
SQL_SELECT_@@queryname@@ :: get(@@queryargs@@)
{
    int r;
    bool ret = false;

    if (pdb == NULL)
        return false;

    if (pStmt_get_query == NULL)
    {
        r = sqlite3_prepare_v2(
            pdb,
            "SELECT @@queryfields@@ "
            "@@querybody@@",
            -1, &pStmt_get_query, NULL);
        if (r != SQLITE_OK)
        {
            const char *msg = sqlite3_errmsg(pdb);
            PRINT_ERR("ERROR %d (%s) preparing SELECT", r, msg);
            return false;
        }
    }

    sqlite3_reset(pStmt_get_query);

@@querybinders@@

    if (log_get_func)
        log_get_func(log_arg, pStmt_get_query);

    r = sqlite3_step(pStmt_get_query);
    if (r == SQLITE_ROW)
        ret = get_columns();

    return ret;
}

bool
SQL_SELECT_@@queryname@@ :: get_next(void)
{
    int r;
    bool ret = false;

    if (pdb == NULL || pStmt_get_query == NULL)
        return false;

    r = sqlite3_step(pStmt_get_query);
    if (r == SQLITE_ROW)
        ret = get_columns();

    return ret;
}
________ END
